# {{projectName}} - Claude Configuration

Web Full-Stack development setup for {{projectName}}.

## Project Overview

**Project Name**: {{projectName}}
**Setup Date**: {{setupDate}}
**Preset**: Web Full-Stack
**Framework**: {{#if framework}}{{framework}}{{#if frameworkVersion}} (v{{frameworkVersion}}){{/if}}{{else}}Not detected{{/if}}

## Tech Stack

{{#if detectedTech}}
### Detected Technologies

{{#each detectedTech}}
- **{{this.name}}**: {{this.version}}
{{/each}}
{{/if}}

## Context Monitoring

Context monitoring is configured for intensive development workflows:
- Warning Threshold: {{contextMonitoring.warningThreshold}}%
- Critical Threshold: {{contextMonitoring.criticalThreshold}}%
- Boundary Detection: {{contextMonitoring.boundaryDetection}}

## Hooks

### Pre-Commit Hook

The pre-commit hook ensures code quality before commits:
- Code linting and formatting
- Type checking
- Test execution
- Security scanning

Configuration: {{#if hooks.preCommit.strictness}}{{hooks.preCommit.strictness}}{{else}}balanced{{/if}} strictness

### user-prompt-submit Hook

Monitors context usage and provides optimization suggestions.

## Skills

This project includes specialized Claude skills:

{{#each skills}}
- **{{this}}**: Specialized expertise for {{this}} development
{{/each}}

Skills are located in `.claude/skills/` directory.

## Subagents

Delegated agents for specialized tasks:

{{#each subagents}}
- **{{this}}**: Handles {{this}} tasks
{{/each}}

Subagents are located in `.claude/agents/` directory.

## Coding Standards

{{#if codingStandards}}
This project follows these coding standards:

{{#each codingStandards}}
- {{this}}
{{/each}}
{{/if}}

## Memory Sections

{{#each memorySections}}
### {{this.title}}

{{this.content}}

{{/each}}

{{#if context7Libraries}}
## Context7 Libraries

Pre-configured library documentation access:

{{#each context7Libraries}}
- {{this}}
{{/each}}
{{/if}}

## Development Workflow

1. **Start Development**: Begin coding with full skill and subagent support
2. **Pre-Commit Checks**: Automatic quality checks before commits
3. **Context Monitoring**: Real-time context usage tracking
4. **Documentation**: Maintain project memory in `.contextualizer/memory/`

## Project Structure

```
{{projectName}}/
├── .claude/
│   ├── CLAUDE.md (this file)
│   ├── hooks/
│   │   ├── user-prompt-submit
│   │   └── pre-commit
│   ├── skills/
│   │   └── [specialized skills]
│   └── agents/
│       └── [subagents]
├── .contextualizer/
│   ├── config.yaml
│   └── memory/
└── src/
    └── [your code]
```

---

*Generated by Contextualizer on {{setupDate}}*
