# Next.js Expert Skill

## Overview

Specialized skill for Next.js development in {{projectName}}.

{{#if frameworkVersion}}
**Detected Version**: Next.js v{{frameworkVersion}}
{{/if}}

## Expertise Areas

### App Router (Next.js 13+)

- Server Components and Client Components
- File-based routing with app directory
- Layouts, templates, and loading states
- Error handling and not-found pages
- Route handlers and API routes
- Server Actions and mutations

### Data Fetching

- Async Server Components
- Streaming and Suspense boundaries
- Parallel and sequential data fetching
- Static generation and incremental static regeneration
- Dynamic rendering strategies

### Performance Optimization

- Image optimization with next/image
- Font optimization with next/font
- Script optimization with next/script
- Bundle analysis and code splitting
- Edge runtime optimization

### Best Practices

- TypeScript configuration for Next.js
- ESLint and Prettier setup
- Testing strategies (unit, integration, E2E)
- Deployment optimization
- Environment variables and configuration

## Common Patterns

### Server Component with Data Fetching

```typescript
async function MyPage() {
  const data = await fetchData()
  return <div>{data.content}</div>
}
```

### Client Component with Interactivity

```typescript
'use client'

import { useState } from 'react'

export function InteractiveComponent() {
  const [state, setState] = useState()
  // ...
}
```

### Route Handler (API)

```typescript
export async function GET(request: Request) {
  const data = await getData()
  return Response.json(data)
}
```

## Resources

- [Next.js Documentation](https://nextjs.org/docs)
- [App Router Guide](https://nextjs.org/docs/app)
- [Next.js Examples](https://github.com/vercel/next.js/tree/canary/examples)

---

*Generated by Contextualizer for {{projectName}}*
